{"version":3,"sources":["fbase.js","components/NweetFactory.js","components/Nweet.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","fireBaseInstance","authService","auth","dbService","firestore","storageService","storage","NweetFacotry","userObj","useState","nweet","setNweet","attachment","setAttachment","onSubmit","event","a","preventDefault","attachmentUrl","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","nweetCol","text","createdAt","Date","now","creatorId","collection","add","console","log","className","value","onChange","target","type","placeholder","maxLength","for","icon","faPlus","id","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","src","backgroundImage","onClick","faTimes","Nweet","nweetObj","isOwner","editing","setEditing","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","delete","refFromURL","toggleEditing","prev","update","autoFocus","required","witdh","height","alt","class","faTrash","faPencilAlt","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","NweetFactory","marginTop","nweetData","AuthForm","newAccount","setNewAccount","email","setEmail","password","setPassword","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","myNweets","setMyNweets","getMyNweets","where","myNweetArray","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23ffa3e2.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\n// Your web app's Firebase configuration\r\n  const firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const fireBaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFacotry = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(nweet === \"\") return;\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\" && attachment !== null) {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetCol = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetCol);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {target: {value}} = event;\r\n        setNweet(value);\r\n    };\r\n    console.log(userObj);\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: {files, }\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        if(theFile) {\r\n            reader.onloadend = (finishedEvent) => {\r\n                const {\r\n                    currentTarget: { result }, \r\n                } = finishedEvent;\r\n                setAttachment(result); \r\n            }\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    }\r\n    const onClearPhotoClick = () => setAttachment(\"\");\r\n    \r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n           <input\r\n                className=\"factoryInput__input\"\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n            />\r\n            <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n        </div>\r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n            <span>Add photos</span>\r\n            <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input id=\"attach-file\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={onFileChange}\r\n            style={{ opacity: 0, }}\r\n        />\r\n        {attachment &&\r\n            (<div className=\"factoryForm__attachment\">\r\n                <img\r\n                    src={attachment}\r\n                    style={{ backgroundImage: attachment, }}\r\n                />\r\n                <div className=\"factoryForm__clear\" onClick={onClearPhotoClick}>\r\n                    <span>Remove</span>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                </div>\r\n            </div>)}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NweetFacotry;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async() => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if(ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if(nweetObj.attachmentUrl !== null && nweetObj.attachmentUrl !== '') { \r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n            }\r\n        }\r\n    }\r\n    const toggleEditing = ()=> setEditing(prev => !prev);\r\n    \r\n    const onChange = (event) => {\r\n        const {target: {value}} = event;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    const onSubmit = async(event)=> {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n        toggleEditing();\r\n    }\r\n    return (\r\n        <div className=\"nweet\">\r\n        {editing?\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input \r\n                    type=\"text\" \r\n                    onChange={onChange} \r\n                    value={newNweet} \r\n                    placeholder=\"Edit your nweet\" \r\n                    autoFocus\r\n                    className=\"formInput\"\r\n                    required/>\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                    Cancel\r\n                </span>           \r\n            </form>\r\n        </>\r\n        :\r\n        <>\r\n            <h4>{nweetObj.text}</h4>\r\n            {nweetObj.attachmentUrl && \r\n                <img src={nweetObj.attachmentUrl} witdh=\"50px\" height=\"50px\" alt=\"\" />\r\n            }\r\n            {isOwner && \r\n            <>\r\n            <div class=\"nweet__actions\">\r\n                <span onClick={onDeleteClick}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                     <FontAwesomeIcon icon={faPencilAlt} />\r\n                </span>\r\n            </div>\r\n            </>}\r\n         </>\r\n        }       \r\n        </div>\r\n    );  \r\n}\r\n\r\nexport default Nweet;","import React, { useState, useEffect } from \"react\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport Nweet from \"components/Nweet\";\r\nimport { dbService } from \"fbase\";\r\n\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        dbService.collection(\"nweets\").orderBy(\"createdAt\", \"desc\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map((doc) =>\r\n             ({ id: doc.id,\r\n                ...doc.data()})\r\n            )\r\n            setNweets(nweetArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n    <div className=\"container\">\r\n       <NweetFactory userObj={userObj}/>\r\n       <div style={{ marginTop: 30 }}>\r\n            {nweets.map((nweetData) => \r\n                <Nweet \r\n                    key={nweetData.id} \r\n                    nweetObj={nweetData} \r\n                    isOwner={nweetData.creatorId === userObj.uid }\r\n                />)}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {target: {name, value}} = event;\r\n        if(name === \"email\") {\r\n            setEmail(value);\r\n        } else if(name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n   \r\n    const toggleAccount = ()=> setNewAccount((prev) => !prev);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if(newAccount) {\r\n                // create account\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            } else {\r\n                // login\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch(error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n        <input \r\n            name=\"email\" \r\n            type=\"test\" \r\n            placeholder=\"Email\" \r\n            required \r\n            value={email}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n            />\r\n        <input \r\n            name=\"password\" \r\n            type=\"password\" \r\n            placeholder=\"password\" \r\n            required \r\n            value={password}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n            />\r\n        <input name=\"login\"  type=\"submit\" className=\"authInput authSubmit\"\r\n            value={newAccount? \"Create Account\" : \"Sign In\" }/>\r\n        {error && <span className=\"authError\">{error}</span>}\r\n        <span onClick={toggleAccount} className=\"authSwitch\">\r\n            {newAccount ? \"Sign In\" : \"Create Account\" }\r\n        </span>\r\n    </form>\r\n    );\r\n\r\n}\r\n\r\nexport default AuthForm;","import { authService, fireBaseInstance } from \"fbase\";\r\nimport React  from \"react\";\r\nimport AuthForm from \"components/AuthForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle, faGithub, } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n\r\n const Auth = () => {\r\n    const onSocialClick = async (event)=> {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\") {\r\n            provider = new fireBaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new fireBaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return (\r\n    <div className=\"authContainer\">\r\n        <FontAwesomeIcon\r\n          icon={faTwitter}\r\n          color={\"#04AAFF\"}\r\n          size=\"3x\"\r\n          style={{ marginBottom: 30 }}\r\n        />\r\n        <AuthForm />\r\n        <div className=\"authBtns\">\r\n            <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n            </button>\r\n            <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                Continue with Github <FontAwesomeIcon icon={faGithub} /> \r\n            </button>\r\n        </div>\r\n    </div>\r\n)\r\n}; \r\n\r\nexport default Auth;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => \r\n    <nav>\r\n        <div>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                    >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                        ? `${userObj.displayName}의 Profile`\r\n                        : \"Profile\"}\r\n                    </span>\r\n                    </Link>               \r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </nav>;\r\n\r\n\r\nexport default Navigation;","import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Nweet from \"components/Nweet\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    // displayName은 createUserWithEmailAndPassword로 가입 시 초기값 null\r\n    const [myNweets, setMyNweets] = useState([]);\r\n\r\n    const onLogOutClick = ()=> {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    }\r\n    const getMyNweets = async () => {\r\n         await dbService.collection(\"nweets\")\r\n        .where(\"creatorId\", \"==\", userObj.uid)\r\n        .orderBy(\"createdAt\", \"desc\")\r\n        .onSnapshot(snapshot => {\r\n            const myNweetArray = snapshot.docs.map((doc) =>\r\n             ({ id: doc.id,\r\n                ...doc.data()})\r\n            )\r\n            setMyNweets(myNweetArray);\r\n        });\r\n    }\r\n\r\n    useEffect(()=> {\r\n        getMyNweets()\r\n    }, []);\r\n\r\n    const onSubmit = async (event)=> {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const { target: {\r\n            value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                    marginTop: 10,\r\n                    }} />\r\n            </form>\r\n            <div style={{ marginTop: 30 }}>\r\n                {myNweets.map((nweetData) => \r\n                 <Nweet key={nweetData.id} \r\n                        nweetObj={nweetData} \r\n                        isOwner={nweetData.creatorId === userObj.uid } />)}\r\n            </div>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n\r\n}","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\nimport Auth from \"routes/Auth\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter =  ({isLoggedIn, userObj, refreshUser}) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn? \r\n                ( \r\n                <div\r\n                    style={{\r\n                    maxWidth: 890,\r\n                    width: \"100%\",\r\n                    margin: \"0 auto\",\r\n                    marginTop: 80,\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\", }}>\r\n                    <Route exact path=\"/\">\r\n                        <Home userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/profile\">\r\n                        <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                    </Route>\r\n                </div> ) \r\n                :                \r\n                ( \r\n                <Route exact path=\"/\">\r\n                   <Auth/>\r\n                </Route> \r\n                )\r\n                } \r\n            </Switch>\r\n        </Router>\r\n    );\r\n\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(()=> {\r\n    authService.onAuthStateChanged((user)=>{\r\n    if(user) {\r\n     // setUserObj(user);\r\n      setUserObj({\r\n        displayName: user.displayName,\r\n        uid: user.uid,\r\n        updateProfile: (args)=> user.updateProfile(args), \r\n        // to execute real function in Profile component\r\n      });\r\n    } else {\r\n      // profile에서 signout시 화면처리\r\n      setUserObj(null);\r\n    }\r\n    setInit(true);\r\n    });\r\n  }, []);\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    //setUserObj(Object.assign({}, user));\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args)=> user.updateProfile(args),\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n    {init ? \r\n      <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser}/> : \"Initializing..\" }\r\n    <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"components/App\";\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}